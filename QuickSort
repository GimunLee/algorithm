package algorithm;
import java.util.Arrays;
import java.util.Random;
public class sorting {
    static int[] temp, temp2;
    static int length = 1_000_000;
    
    public static void main(String[] args) {
        // TODO Auto-generated method stub
        temp = new int[length];
        temp2 = new int[length];
        Random r = new Random();
        long start = System.currentTimeMillis();
        for (int tc = 0; tc < 10; tc++) {
            
            for (int i = 0; i < length; i++) {
                int x = r.nextInt();
                temp[i] = x;
                //temp2[i] = x;
            }
            
            quickSort2(temp, 0, length - 1);
            //Arrays.sort(temp2);
            /*for (int i = 0; i < 100_000; i++) {
                if (temp[i] != temp2[i]) {
                    return;
                }
            }*/
        }
        System.out.println(System.currentTimeMillis() - start);
    }
    public static void quickSort(int[] arr, int left, int right) {
        
        if (left >= right)
            return;
        if (left < right) {
            int pivot = arr[(left + right) / 2];
            int i = left;
            int j = right;
            while (true) {
                while (arr[i] <= pivot) {
                    i++;
                }
                
                while (arr[j] >= pivot) {
                    j--;
                }
                if (i >= j)
                    break;
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
                
                if (arr[i] == arr[j]) {
                    i++; j--;
                }
            }
            quickSort(arr, left, i - 1);
            quickSort(arr, j + 1, right);
        }
    }
    
public static void quickSort2(int[] arr, int left, int right) {
        
        if(left >= right) return;
        
        if(left < right) {
            
            int pivot = arr[(left+right)/2];
            int i = left - 1;
            int j = right + 1;
            
            while(true) {
                
                while(arr[++i] < pivot) {
                }
                
                while(arr[--j] > pivot) {
                }
                
                if(i >= j) break;
                
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
            
            quickSort2(arr, left, i-1);
            quickSort2(arr, j+1, right);
            
        }
        
    }
}
